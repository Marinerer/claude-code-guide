name: Sync Anthropic Release Notes

on:
  schedule:
    # Runs once every 24h at 00:15 UTC
    - cron: "15 0 * * *"
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: sync-release-notes
  cancel-in-progress: false

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Download latest Markdown files and stage changes
        run: |
          set -euo pipefail

          FOLDER="Official Claude Releases"
          mkdir -p "$FOLDER"

          FILES=(
            "https://raw.githubusercontent.com/anthropics/claude-code/main/CHANGELOG.md|CHANGELOG.md"
            "https://docs.anthropic.com/en/release-notes/api.md|api.md"
            "https://docs.anthropic.com/en/release-notes/claude-apps.md|claude-apps.md"
            "https://docs.anthropic.com/en/release-notes/system-prompts.md|system-prompts.md"
            "https://docs.anthropic.com/en/release-notes/claude-code.md|claude-code.md"
          )

          CHANGED_FILES=()
          COMMIT_BODY=""

          for entry in "${FILES[@]}"; do
            IFS="|" read -r URL NAME <<< "$entry"
            OUT="$FOLDER/$NAME"
            TMP="$OUT.tmp"

            echo "Fetching $URL -> $OUT"
            curl -fsSL -H "Accept: text/markdown, text/plain;q=0.9, text/x-markdown;q=0.9, */*;q=0.1" "$URL" -o "$TMP"

            if [[ -f "$OUT" ]]; then
              # If content is identical ignoring whitespace, skip
              if diff --no-index -w "$OUT" "$TMP" >/dev/null 2>&1; then
                echo "No substantive changes for $NAME (whitespace-only or identical)"; rm -f "$TMP"; continue
              fi
            fi

            # Build a small per-file summary BEFORE replacing the file
            # 1) Diffstat
            NUMSTAT=$(diff --no-index --numstat "${OUT:-/dev/null}" "$TMP" 2>/dev/null || true)
            ADDED=$(echo "$NUMSTAT" | awk '{print $1}')
            DELETED=$(echo "$NUMSTAT" | awk '{print $2}')

            # 2) Highlights: first few added headings/bullets
            HILITES=$(
              diff -u --new-file "${OUT:-/dev/null}" "$TMP" \
                | sed -n 's/^+[^+].*/\0/p' \
                | sed 's/^+//' \
                | grep -E '^(#|##|###|- |\* )' \
                | head -n 6 || true
            )
            # If nothing matched, just show the first few added lines
            if [[ -z "$HILITES" ]]; then
              HILITES=$(
                diff -u --new-file "${OUT:-/dev/null}" "$TMP" \
                  | sed -n 's/^+[^+].*/\0/p' \
                  | sed 's/^+//' \
                  | head -n 3 || true
              )
            fi

            # Replace file
            mv -f "$TMP" "$OUT"
            CHANGED_FILES+=("$OUT")

            # Append to commit body
            COMMIT_BODY+=$'- '"$NAME"' (+'"${ADDED:-0}"' / -'"${DELETED:-0}"')\n'
            if [[ -n "$HILITES" ]]; then
              while IFS= read -r line; do
                COMMIT_BODY+="    â€¢ ${line}\n"
              done <<< "$HILITES"
            fi
          done

          # Stage only the files that actually changed
          if [[ ${#CHANGED_FILES[@]} -gt 0 ]]; then
            git add "${CHANGED_FILES[@]}"

            # Store commit body for next step
            printf '%b' "$COMMIT_BODY" > /tmp/commit_body.txt
            echo "CHANGES_MADE=true" >> $GITHUB_ENV
          else
            echo "No updates to commit."
            echo "CHANGES_MADE=false" >> $GITHUB_ENV
          fi

      - name: Commit and push if changes
        if: env.CHANGES_MADE == 'true'
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          TITLE="Synced Anthropic latest releases ($(date -u +%F))"
          BODY=$(cat /tmp/commit_body.txt || true)
          git commit -m "$TITLE" -m "$BODY"
          git push
          echo "Changes pushed."
